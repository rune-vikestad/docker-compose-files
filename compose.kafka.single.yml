################################################################################
# Services
################################################################################
services:
  #
  # Kafka
  #
  kafka:
    container_name: kafka
    hostname: kafka
    restart: unless-stopped
    build:
      context: ./kafka
      dockerfile: Dockerfile
      args:
        KAFKA_VERSION: 4.0.0
    profiles: 
      - kafka
    environment:
      KAFKA_NODE_ID: 0
      KAFKA_CLUSTER_ID: e7dfec10-d682-11ee-8e0d-0242ac120002
      KAFKA_PROCESS_ROLES: controller,broker
      # Listeners:
      # - CONTROLLER: KRaft quorum traffic
      # - BROKER: internal listener for in-docker clients/metadata
      # - EXTERNAL: host-facing listener for host apps/CLIs
      KAFKA_LISTENERS: CONTROLLER://0.0.0.0:9093,BROKER://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      # Internal advertises the Docker hostname; external advertises your host address/port
      # Use 127.0.0.1 if clients run on the same machine; otherwise use your machine's LAN IP
      KAFKA_ADVERTISED_LISTENERS: BROKER://kafka:9092,EXTERNAL://127.0.0.1:19092
      # Map listener names to protocols
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,BROKER:PLAINTEXT,EXTERNAL:PLAINTEXT
      # Inter-broker comms should use the internal listener
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      # KRaft controller settings (single voter = self)
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
    volumes:
      #- kafka-partition-data:/var/lib/kafka/data
      - kafka-meta:/var/lib/kafka/meta
      - kafka-config:/opt/kafka/config
      - kafka-config-shared:/mnt/shared/config
      - kafka-log:/var/log/kafka
      - kafka-certs:/etc/kafka/certs
      - kafka-secrets:/etc/kafka/secrets
    ports:
      - 19092:19092
    healthcheck:
      test: ["CMD-SHELL","/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 5s
      timeout: 3s
      retries: 30      
    networks: 
      - default

  # 
  # Kafka Bootstrap
  #
  kafka-bootstrap:
    container_name: kafka-bootstrap
    hostname: kafka-bootstrap
    restart: on-failure
    profiles:
      - kafka
      - kafka-bootstrap
    depends_on:
      kafka:
        condition: service_healthy
    build:
      context: ./kafka-bootstrap
      dockerfile: Dockerfile
      args:
        ALPINE_VERSION: 3.22.2
        KAFKA_VERSION: 4.0.0
        SCALA_VERSION: 2.13
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      DEFAULT_PARTITIONS: 1
      DEFAULT_REPLICATION_FACTOR: 1
      WAIT_MAX_TRIES: 60
    networks:
      - default

  #
  # Kafka UI
  #
  kafka-ui:
    container_name: kafka-ui
    hostname: kafka-ui
    profiles: [kafka-ui]
    build:
      context: ./kafka-ui
      dockerfile: Dockerfile
      args:
        KAFKA_UI_VERSION: v0.7.2
    environment:
      KAFKA_CLUSTERS_0_NAME: Default
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://apicurio-registry:8080/apis/ccompat/v7
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - 8092:8080
    networks: 
      - default

################################################################################
# Volumes
################################################################################
volumes:
  kafka-partition-data:
  kafka-meta:
  kafka-config:
  kafka-config-shared:
  kafka-log:
  kafka-certs:
  kafka-secrets:
